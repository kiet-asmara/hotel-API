definitions:
  handlers.BookingResponse:
    properties:
      bookings:
        items:
          $ref: '#/definitions/model.Booking'
        type: array
    type: object
  handlers.DepositResponse:
    properties:
      invoice:
        $ref: '#/definitions/service.XenditResponse'
      message:
        type: string
    type: object
  handlers.ErrResponse:
    properties:
      message:
        type: string
    type: object
  handlers.GetDepositResponse:
    properties:
      deposit_amount:
        type: number
      deposits:
        items:
          $ref: '#/definitions/model.Deposit'
        type: array
    type: object
  handlers.LoginResponse:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
  handlers.PaymentReq:
    properties:
      payment_method:
        type: string
    type: object
  handlers.PaymentResponse:
    properties:
      message:
        type: string
      payment:
        $ref: '#/definitions/model.Payment'
    type: object
  handlers.PaymentsResponse:
    properties:
      payments:
        items:
          $ref: '#/definitions/model.Payment'
        type: array
    type: object
  handlers.RegisterResponse:
    properties:
      message:
        type: string
      user:
        $ref: '#/definitions/service.UserInfo'
    type: object
  handlers.RoomBookReq:
    properties:
      checkin_date:
        type: string
      checkout_date:
        type: string
      room_id:
        type: integer
    required:
    - checkin_date
    - checkout_date
    - room_id
    type: object
  handlers.RoomBookResp:
    properties:
      booking:
        $ref: '#/definitions/model.Booking'
      message:
        type: string
    type: object
  handlers.RoomResp:
    properties:
      rooms:
        items:
          $ref: '#/definitions/model.Room'
        type: array
    type: object
  handlers.RoomResp2:
    properties:
      message:
        type: string
      room:
        $ref: '#/definitions/model.Room'
    type: object
  handlers.RoomResp3:
    properties:
      message:
        type: string
      room_type:
        $ref: '#/definitions/model.Room_type'
    type: object
  handlers.RoomTyResp:
    properties:
      room_types:
        items:
          $ref: '#/definitions/model.Room_type'
        type: array
    type: object
  handlers.RoomTypeCreate:
    properties:
      available_rooms:
        type: integer
      description:
        type: string
      price_per_night:
        type: number
      room_name:
        type: string
    required:
    - description
    - price_per_night
    - room_name
    type: object
  model.Booking:
    properties:
      booking_id:
        type: integer
      checkin_date:
        type: string
      checkout_date:
        type: string
      paid:
        type: boolean
      room_id:
        type: integer
      total_price:
        type: number
      user_id:
        type: integer
    type: object
  model.Deposit:
    properties:
      amount:
        type: number
      deposit_id:
        type: integer
      invoice_id:
        type: string
      status:
        type: string
      url:
        type: string
      user_id:
        type: integer
    type: object
  model.Payment:
    properties:
      amount:
        type: number
      booking_id:
        type: integer
      invoice_id:
        type: string
      payment_date:
        type: string
      payment_id:
        type: integer
      payment_method:
        enum:
        - deposit
        - xendit
        type: string
      status:
        type: string
      url:
        type: string
    type: object
  model.Room:
    properties:
      available:
        type: boolean
      room_id:
        type: integer
      room_type:
        $ref: '#/definitions/model.Room_type'
      room_type_id:
        type: integer
    type: object
  model.Room_type:
    properties:
      available_rooms:
        type: integer
      description:
        type: string
      price_per_night:
        type: number
      room_name:
        type: string
      room_type_id:
        type: integer
    required:
    - description
    - price_per_night
    - room_name
    type: object
  service.DepositInput:
    properties:
      deposit_amount:
        type: number
    required:
    - deposit_amount
    type: object
  service.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  service.RegisterInput:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    required:
    - email
    - full_name
    - password
    type: object
  service.UserInfo:
    properties:
      deposit_amount:
        type: number
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    type: object
  service.XenditResponse:
    properties:
      amount:
        type: number
      customer:
        additionalProperties: {}
        type: object
      expiry_date:
        type: string
      external_id:
        type: string
      id:
        type: string
      invoice_url:
        type: string
      status:
        type: string
      user_id:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: kiet123pascal@gmail.com
    name: Kiet Asmara
    url: http://www.swagger.io/support
  description: Hotel management system for users and admin.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Restful Hotel App API
  version: "1.0"
paths:
  /bookings:
    get:
      consumes:
      - application/json
      description: Get all and refresh user deposit history
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BookingResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Get all Bookings
      tags:
      - Booking
  /bookings/:id:
    post:
      consumes:
      - application/json
      description: Pay for a booking by ID using deposit or Xendit
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Booking ID
        in: path
        name: ID
        required: true
        type: integer
      - description: The input payment struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handlers.PaymentReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.PaymentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Pay Booking By ID
      tags:
      - Booking
  /bookings/payments:
    get:
      consumes:
      - application/json
      description: Get all user payments
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.PaymentsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Get all payments
      tags:
      - Booking
  /rooms:
    get:
      consumes:
      - application/json
      description: Get all room types
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RoomTyResp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Get Room Types
      tags:
      - Room
  /rooms/:id:
    delete:
      consumes:
      - application/json
      description: Delete a room
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Room ID
        in: path
        name: ID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Delete room
      tags:
      - Room
    get:
      consumes:
      - application/json
      description: Get all available rooms by type id
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Room Type ID
        in: path
        name: ID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RoomResp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Get Available Rooms By Type
      tags:
      - Room
    post:
      consumes:
      - application/json
      description: Create a room
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Room Type ID
        in: path
        name: ID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.RoomResp2'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Create a room
      tags:
      - Room
  /rooms/book:
    post:
      consumes:
      - application/json
      description: Book room by id
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: The input booking struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handlers.RoomBookReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.RoomBookResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Book a room
      tags:
      - Room
  /rooms/type:
    post:
      consumes:
      - application/json
      description: Create a room type
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: The input room struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handlers.RoomTypeCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.RoomResp3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Create a room type
      tags:
      - Room
  /rooms/type/:id:
    put:
      consumes:
      - application/json
      description: Update a room type
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Room Type ID
        in: path
        name: ID
        required: true
        type: integer
      - description: The input room struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handlers.RoomTypeCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.RoomResp3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Update a room type
      tags:
      - Room
  /users/deposit:
    get:
      consumes:
      - application/json
      description: Get all and refresh user deposit history
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetDepositResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Get all Deposits
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Deposit to balance with Xendit invoice
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: The input deposit struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.DepositInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.DepositResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Deposit
      tags:
      - User
  /users/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: The input user struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Login
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: The input user struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Register
      tags:
      - User
swagger: "2.0"
